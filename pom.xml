<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.medical.records</groupId>
    <artifactId>medical</artifactId>
    <packaging>war</packaging>
    <version>1.0.0</version>
    <name>javaee7 Maven Webapp</name>
    <url>http://maven.apache.org</url>

    <properties>

        <jersey.version>2.10.4</jersey.version>
        <!--<application.server.dir>E:/Application/payara/payara41</application.server.dir>-->
        <!--<application.server.dir>D:/Application/Payara/payara41</application.server.dir>-->


        <application.server.dir>E:/Application/glassfish/glassfish4</application.server.dir>
        <!--<application.server.dir>D:/Application/glassfish/glassfish4</application.server.dir>-->

        <host.name>localhost</host.name>
        <admin.user>admin</admin.user>
        <admin.password>kasra</admin.password>
        <admin.port>5000</admin.port>
        <http.port>8084</http.port>
        <admin.domain.name>domain2</admin.domain.name>
        <glassfish.debug>true</glassfish.debug>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.7</java.version>
        <scala.version>2.10.4</scala.version>
    </properties>


    <dependencies>



        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.39</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>

        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.10.2</version>
        </dependency>

        <dependency>
            <groupId>com.github.xuwei-k</groupId>
            <artifactId>html2image</artifactId>
            <version>0.1.0</version>
        </dependency>

        <dependency>
            <groupId>io.github.cloudify</groupId>
            <artifactId>spdf_2.9.3</artifactId>
            <version>1.3.3</version>
        </dependency>

        <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.6</version>
    </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.7</version>
        </dependency>

        <dependency>
            <groupId>eu.medsea.mimeutil</groupId>
            <artifactId>mime-util</artifactId>
            <version>2.1.2</version>
        </dependency>

        <!-- for html to pdf-->
        <!--<dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itextpdf</artifactId>
            <version>5.5.6</version>
        </dependency>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>1.52</version>
        </dependency>

        <dependency>
            <groupId>com.itextpdf.tool</groupId>
            <artifactId>xmlworker</artifactId>
            <version>5.5.7</version>
        </dependency>-->


        <!-- for html to pdf-->

        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.sun.jersey/jersey-servlet -->
        <!--<dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
            <version>1.19</version>
        </dependency>-->

        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-processing</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-sse</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>



        <!--
                <dependency>
                    <groupId>org.jboss.arquillian.junit</groupId>
                    <artifactId>arquillian-junit-container</artifactId>
                    <version>1.1.11.Final</version>
                    <type>pom</type>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.junit</groupId>
                    <artifactId>arquillian-junit-core</artifactId>
                    <version>1.1.11.Final</version>
                    <type>pom</type>
                    <scope>test</scope>
                </dependency>
        -->

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.10</artifactId>
            <version>3.2.0-SNAP4</version>
        </dependency>


    </dependencies>


    <!--  <dependencyManagement>

        <dependencies>

          <dependency>
            <groupId>org.jboss.arquillian</groupId>
            <artifactId>arquillian-bom</artifactId>
            <version>1.1.11.Final</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>

        </dependencies>

      </dependencyManagement>-->


    <build>

        <finalName>${artifactId}</finalName>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>2.15.2</version>
                <executions>

                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <phase>test-compile</phase>
                    </execution>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>

                <groupId>org.glassfish.maven.plugin</groupId>
                <artifactId>maven-glassfish-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <glassfishDirectory>${application.server.dir}</glassfishDirectory>
                    <user>${admin.user}</user>
                    <adminPassword>${admin.password}</adminPassword>
                    <debug>${glassfish.debug}</debug>


                    <domain>
                        <name>${admin.domain.name}</name>
                        <host>${host.name}</host>
                        <adminPort>${admin.port}</adminPort>
                        <httpPort>${http.port}</httpPort>

                        <properties>
                            <property>
                                <name>server.log-service.file</name>
                                <value>${project.basedir}/src/main/webapp/WEB-INF/server.log</value>
                            </property>
                        </properties>

                        <auth>
                            <realm>
                                <name>KASRARealm2</name>
                                <className>com.sun.enterprise.security.auth.realm.jdbc.JDBCRealm</className>
                                <properties>
                                    <property>
                                        <name>jaas-context</name>
                                        <value>jdbcRealm</value>
                                    </property>
                                    <property>
                                        <name>datasource-jndi</name>
                                        <value>jdbc/medical</value>
                                    </property>
                                    <property>
                                        <name>user-table</name>
                                        <value>user</value>
                                    </property>
                                    <property>
                                        <name>user-name-column</name>
                                        <value>username</value>
                                    </property>
                                    <property>
                                        <name>password-column</name>
                                        <value>password</value>
                                    </property>
                                    <property>
                                        <name>group-table</name>
                                        <value>groups</value>
                                    </property>
                                    <property>
                                        <name>group-table-user-name-column</name>
                                        <value>user_username</value>
                                    </property>
                                    <property>
                                        <name>group-name-column</name>
                                        <value>role</value>
                                    </property>
                                    <property>
                                        <name>password-encryption-algorithm</name>
                                        <value>AES</value>
                                    </property>
                                    <property>
                                        <name>database-user</name>
                                        <value>root</value>
                                    </property>
                                    <property>
                                        <name>database-password</name>
                                        <value>123</value>
                                    </property>
                                    <property>
                                        <name>dgest-algorithm</name>
                                        <value>SHA-256</value>
                                    </property>
                                    <property>
                                        <name>charset</name>
                                        <value>UTF-8</value>
                                    </property>

                                </properties>
                            </realm>
                        </auth>

                    </domain>



                    <components>
                        <component>
                            <name>${project.artifactId}</name>
                            <artifact>${project.build.directory}/${project.build.finalName}.war</artifact>
                        </component>
                    </components>


                </configuration>

                <executions>
                    <execution>
                        <goals>
                            <goal>redeploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>





            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <executable>${application.server.dir}/bin/asadmin.bat</executable>
                    <arguments>
                        <!--<argument>&#45;&#45;contextroot "/${artifactId}" </argument>-->
                        <argument>--host=localhost</argument>
                        <argument>--port=${admin.port}</argument>
                        <argument>--user=admin</argument>
                        <argument>
                            --passwordfile=${project.basedir}/src/main/webapp/help/maven/files/password
                        </argument>
                        <argument>--interactive=false</argument>
                        <argument>--echo=true</argument>
                        <argument>--terse=true</argument>
                        <argument>add-resources</argument>
                        <argument>--upload=true</argument>
                        <argument>${project.basedir}/src/main/webapp/WEB-INF/glassfish-resources.xml</argument>


                        <!--<argument>${project.basedir}/src/main/webapp/WEB-INF/domain.xml</argument>-->
                    </arguments>
                </configuration>
            </plugin>





            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <!--<systemPropertyVariables>
                      <tomee.httpPort>-1</tomee.httpPort>
                      <tomee.stopPort>-1</tomee.stopPort>
                    </systemPropertyVariables>-->
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

<!--

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <dependencies>
                    <dependency>
                        <groupId>fish.payara.extras</groupId>
                        <artifactId>payara-micro</artifactId>
                        <version>4.1.1.162</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>payara-uber-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>fish.payara.micro.PayaraMicro</mainClass>
                            <arguments>
                                <argument>&#45;&#45;deploy</argument>
                                <argument>${project.basedir}/target/${project.build.finalName}.war</argument>
                                <argument>&#45;&#45;outputUberJar</argument>
                                <argument>${project.basedir}/target/${project.build.finalName}.jar</argument>
                            </arguments>
                            <includeProjectDependencies>false</includeProjectDependencies>
                            <includePluginDependencies>true</includePluginDependencies>
                            <executableDependency>
                                <groupId>fish.payara.extras</groupId>
                                <artifactId>payara-micro</artifactId>
                            </executableDependency>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

-->

        </plugins>



    </build>

    <repositories>


        <repository>
            <id>maven2</id>
            <name>Maven22</name>
            <url>http://central.maven.org/maven2</url>
        </repository>





    </repositories>

</project>
